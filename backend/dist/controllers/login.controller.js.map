{"version":3,"file":"login.controller.js","names":["_db","require","_schema","_bcrypt","_interopRequireDefault","_Tokens","e","__esModule","_regenerator","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","login","exports","_ref","_callee","req","res","_LoginSchema$parse","email","password","User","isMatch","payload","token","userName","isProduction","isDevelopment","cookieOptions","_t","_context","LoginSchema","parse","body","db","user","findUnique","where","status","json","success","message","bcrypt","compare","id","name","console","log","headers","origin","host","process","env","NODE_ENV","httpOnly","secure","sameSite","maxAge","domain","undefined","path","cookie","error","_x","_x2","SignUp","_ref2","_callee2","_req$body","hashedPass","existingUser","newUser","_t2","_t3","_t4","_t5","_context2","genSalt","hash","data","generateToken","_x3","_x4"],"sources":["../../src/controllers/login.controller.ts"],"sourcesContent":["import { db } from \"@/DB_Client/db\";\r\nimport { Request, Response, RequestHandler } from \"express\";\r\nimport { LoginSchema, SignupSchema } from \"@/types/Zod/schema\";\r\nimport bcrypt from \"bcrypt\";\r\nimport { generateToken, verifyToken } from \"@/types/Tokens\";\r\n\r\n// export const login: RequestHandler = async (req: Request, res: Response) => {\r\n//   try {\r\n//     const { email, password } = LoginSchema.parse(req.body);\r\n//     const User = await db.user.findUnique({\r\n//       where: {\r\n//         email: email,\r\n//       },\r\n//     });\r\n\r\n//     if (!User) {\r\n//       res.status(401).json({\r\n//         success: false,\r\n//         message: \"Invalid email or password\",\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     const isMatch = await bcrypt.compare(password, User.password);\r\n//     if (!isMatch) {\r\n//       res.status(401).json({\r\n//         success: false,\r\n//         message: \"Invalid email or password\",\r\n//       });\r\n//       return;\r\n//     }\r\n//     const payload = {\r\n//       id: User.id,\r\n//       email: User.email,\r\n//       name: User.name,\r\n//     };\r\n//     const token = await generateToken(payload);\r\n//     if (!token) {\r\n//       res.status(500).json({\r\n//         message: \"Error Generating Token\",\r\n//         success: false,\r\n//       });\r\n//       return;\r\n//     }\r\n//     res.cookie(\"token\", token, {\r\n//       httpOnly: true,\r\n//       secure: false,\r\n//       sameSite: \"lax\",\r\n//       maxAge: 24 * 60 * 60 * 1000,\r\n//     });\r\n//     res.status(200).json({\r\n//       message: \"Logged In Successfully\",\r\n//       name: payload.name,\r\n//       success: true,\r\n//     });\r\n//   } catch (error: any) {\r\n//     if (error.name === \"ZodError\") {\r\n//       res.status(400).json({\r\n//         success: false,\r\n//         message: \"Validation failed\",\r\n//         errors: error.errors,\r\n//       });\r\n//       return;\r\n//     }\r\n//     console.error(\"Sign in error:\", error);\r\n//     res.status(500).json({\r\n//       success: false,\r\n//       message: \"Internal server error\",\r\n//     });\r\n//   }\r\n// };\r\nexport const login = async (req: Request, res: Response) => {\r\n  try {\r\n    const { email, password } = LoginSchema.parse(req.body);\r\n    const User = await db.user.findUnique({\r\n      where: {\r\n        email: email,\r\n      },\r\n    });\r\n\r\n    if (!User) {\r\n      res.status(401).json({\r\n        success: false,\r\n        message: \"Invalid email or password\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const isMatch = await bcrypt.compare(password, User.password);\r\n    if (!isMatch) {\r\n      res.status(401).json({\r\n        success: false,\r\n        message: \"Invalid email or password\",\r\n      });\r\n      return;\r\n    }\r\n    const payload = {\r\n      id: User.id,\r\n      email: User.email,\r\n      name: User.name,\r\n    };\r\n\r\n    // Assuming you have validated the user and generated a token\r\n    const token = \"your-generated-jwt-token\"; // Replace with actual token generation\r\n    const userName = \"User Name\"; // Replace with actual user data\r\n\r\n    console.log(\"Login successful, setting cookie...\");\r\n    console.log(\"Token:\", token);\r\n    console.log(\"Request origin:\", req.headers.origin);\r\n    console.log(\"Request host:\", req.headers.host);\r\n\r\n    // Determine if we're in production\r\n    const isProduction = process.env.NODE_ENV === \"production\";\r\n    const isDevelopment = !isProduction;\r\n\r\n    // Cookie options\r\n    const cookieOptions = {\r\n      httpOnly: true,\r\n      secure: isProduction, // Only secure in production\r\n      sameSite: isProduction ? (\"none\" as const) : (\"lax\" as const), // 'none' for cross-origin in production\r\n      maxAge: 24 * 60 * 60 * 1000, // 24 hours\r\n      domain: isProduction ? undefined : undefined, // Let browser handle domain\r\n      path: \"/\",\r\n    };\r\n\r\n    console.log(\"Cookie options:\", cookieOptions);\r\n\r\n    // Set the cookie\r\n    res.cookie(\"token\", token, cookieOptions);\r\n\r\n    // Also set a test cookie to verify cookies are working\r\n    res.cookie(\"test\", \"working\", {\r\n      httpOnly: false, // This one should be visible in devtools\r\n      secure: false,\r\n      sameSite: \"lax\",\r\n      maxAge: 24 * 60 * 60 * 1000,\r\n    });\r\n\r\n    console.log(\"Cookies set, sending response...\");\r\n\r\n    // Send response\r\n    res.status(200).json({\r\n      success: true,\r\n      message: \"Logged In Successfully\",\r\n      name: userName,\r\n      token: token, // You might want to remove this in production for security\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: \"Internal server error\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const SignUp: RequestHandler = async (req: Request, res: Response) => {\r\n  try {\r\n    const { name, email, password } = req.body;\r\n    const hashedPass = await bcrypt.hash(password, await bcrypt.genSalt(10));\r\n    const existingUser = await db.user.findUnique({\r\n      where: { email: email },\r\n    });\r\n\r\n    if (existingUser) {\r\n      res.status(409).json({\r\n        success: false,\r\n        message: \"User already exists with this email\",\r\n      });\r\n      return;\r\n    }\r\n    const newUser = await db.user.create({\r\n      data: {\r\n        email: email,\r\n        password: hashedPass,\r\n        name: name,\r\n      },\r\n    });\r\n    const payload = {\r\n      id: newUser.id,\r\n      email: newUser.email,\r\n      name: newUser.name,\r\n    };\r\n    const token = await generateToken(payload);\r\n    if (!token) {\r\n      res.status(500).json({\r\n        message: \"Error Generating Response\",\r\n        success: false,\r\n      });\r\n      return;\r\n    }\r\n    res.cookie(\"token\", token, {\r\n      httpOnly: true,\r\n      secure: false,\r\n      sameSite: \"lax\",\r\n      maxAge: 24 * 60 * 60 * 1000,\r\n    });\r\n    res.status(201).json({\r\n      token: token,\r\n      message: \"Sign Up Successful\",\r\n      name: payload.name,\r\n      success: true,\r\n    });\r\n    return;\r\n  } catch (error: any) {\r\n    console.error(\"Sign in error:\", error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: \"Internal server error\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]}