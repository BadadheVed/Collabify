{"version":3,"file":"tasks2.controller.js","names":["_db","require","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","getUserTasks","exports","_ref","_callee","req","res","_req$user","userId","tasks","formattedTasks","_t","_context","user","id","status","json","success","message","db","task","findMany","where","assignedToId","orderBy","dueDate","select","title","description","project","name","teams","take","map","_task$project$teams$","projectName","teamName","console","error","_x","_x2","getProjectTeams","_ref2","_callee2","projectId","formattedTeams","_t2","_context2","params","team","include","members","member","role","_x3","_x4"],"sources":["../../src/controllers/tasks2.controller.ts"],"sourcesContent":["import { db } from \"@/DB_Client/db\";\r\nimport { Request, Response } from \"express\";\r\nimport { RequestHandler } from \"express\";\r\n// to get the user tasks\r\nexport const getUserTasks: RequestHandler = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  try {\r\n    const userId = req.user?.id;\r\n\r\n    if (!userId) {\r\n      res.status(401).json({\r\n        success: false,\r\n        message: \"Unauthorized\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const tasks = await db.task.findMany({\r\n      where: {\r\n        assignedToId: userId,\r\n      },\r\n      orderBy: {\r\n        dueDate: \"asc\",\r\n      },\r\n      select: {\r\n        id: true,\r\n        title: true,\r\n        status: true,\r\n        dueDate: true,\r\n        description: true,\r\n        project: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            teams: {\r\n              select: {\r\n                id: true,\r\n                name: true,\r\n              },\r\n              take: 1, // optional: just pick one team if multiple\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    const formattedTasks = tasks.map((task) => ({\r\n      id: task.id,\r\n      title: task.title,\r\n      status: task.status,\r\n      dueDate: task.dueDate,\r\n      description: task.description,\r\n      projectName: task.project.name,\r\n      teamName: task.project.teams[0]?.name || \"No Team Found\",\r\n    }));\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      tasks: formattedTasks,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error fetching user tasks:\", error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: \"Internal Server Error\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\n// to get teams by project\r\n// GET /project/abc123/teams\r\n//GET /project/abc123/teams?detailed=true this for when the tile is clicked\r\n\r\nexport const getProjectTeams = async (req: Request, res: Response) => {\r\n  const { projectId } = req.params;\r\n\r\n  if (!projectId) {\r\n    res.status(400).json({\r\n      success: false,\r\n      message: \"Project ID is required\",\r\n    });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const teams = await db.team.findMany({\r\n      where: {\r\n        projectId,\r\n      },\r\n      include: {\r\n        members: {\r\n          include: {\r\n            user: {\r\n              select: {\r\n                name: true,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    const formattedTeams = teams.map((team) => ({\r\n      id: team.id,\r\n      name: team.name,\r\n      members: team.members.map((member) => ({\r\n        name: member.user.name,\r\n        role: member.role,\r\n      })),\r\n    }));\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      teams: formattedTeams,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error fetching project teams:\", error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: \"Internal server error\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]}