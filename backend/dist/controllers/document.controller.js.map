{"version":3,"file":"document.controller.js","names":["_db","require","_notifications","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","createDocument","exports","_ref","_callee","req","res","_req$user","teamId","title","userId","teamMember","newDoc","_t","_context","params","body","user","id","status","json","message","db","findFirst","where","include","team","select","name","document","data","content","ownerId","owner","email","handleDocumentCreated","console","error","_x","_x2","getDocumentById","_ref2","_callee2","_req$user2","isMember","_t2","_context2","findUnique","success","_x3","_x4","getDocumentsByTeam","_ref3","_callee3","_req$user3","documents","_t3","_context3","project","findMany","orderBy","updatedAt","_x5","_x6","getDocumentsByProject","_ref4","_callee4","_req$user4","projectId","projectTeamIds","_t4","_context4","teams","map","_x7","_x8","SaveDocument","_ref5","_callee5","_req$user5","updatedDocument","_t5","_context5","update","log","Date","now","_x9","_x0","deleteDocument","_ref6","_callee6","_req$user6","_t6","_context6","_x1","_x10","getUserDocuments","_ref7","_callee7","_req$user7","formattedDocuments","_t7","_context7","members","some","createdAt","teamName","_x11","_x12"],"sources":["../../src/controllers/document.controller.ts"],"sourcesContent":["import { db } from \"@/DB_Client/db\";\r\nimport { handleDocumentCreated } from \"@/services/notifications.service\";\r\nimport { Request, RequestHandler, Response } from \"express\";\r\n\r\n// POST /teams/:teamId/documents - Create document in a specific team\r\nexport const createDocument: RequestHandler = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { teamId } = req.params;\r\n  const { title } = req.body;\r\n  const userId = req.user?.id;\r\n\r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  if (!title) {\r\n    res.status(400).json({ message: \"Title is required\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Check if the user is a member of the team\r\n    const teamMember = await db.teamMember.findFirst({\r\n      where: {\r\n        userId,\r\n        teamId,\r\n      },\r\n      include: {\r\n        team: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!teamMember) {\r\n      res.status(403).json({\r\n        message: \"You are not a member of this team.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Create the document\r\n    const newDoc = await db.document.create({\r\n      data: {\r\n        title,\r\n        content: {}, // empty object by default\r\n        teamId,\r\n        ownerId: userId,\r\n      },\r\n      include: {\r\n        owner: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n          },\r\n        },\r\n        team: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n    handleDocumentCreated(userId, newDoc.id, newDoc.title);\r\n\r\n    res.status(201).json({\r\n      message: \"Document created successfully\",\r\n      document: newDoc,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error creating document:\", error);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n    return;\r\n  }\r\n};\r\n\r\n// GET /documents/:id - Get a specific document\r\nexport const getDocumentById: RequestHandler = async (req, res) => {\r\n  const { id } = req.params;\r\n  const userId = req.user?.id;\r\n\r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const document = await db.document.findUnique({\r\n      where: { id },\r\n    });\r\n\r\n    if (!document) {\r\n      res.status(404).json({ message: \"Document not found\" });\r\n      return;\r\n    }\r\n\r\n    // Check if the user is a member of the team that owns this document\r\n    const isMember = await db.teamMember.findFirst({\r\n      where: {\r\n        userId,\r\n        teamId: document.teamId,\r\n      },\r\n    });\r\n\r\n    if (!isMember) {\r\n      res.status(403).json({\r\n        message: \"You are not authorized to access this document\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // âœ… Return only the required fields\r\n    res.status(200).json({\r\n      document: {\r\n        id: document.id,\r\n        title: document.title,\r\n        content: document.content,\r\n      },\r\n      success: true,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error fetching document:\", error);\r\n    res.status(500).json({ message: \"Server error\" });\r\n    return;\r\n  }\r\n};\r\n\r\n// GET /teams/:teamId/documents - Get all documents for a specific team\r\nexport const getDocumentsByTeam: RequestHandler = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { teamId } = req.params;\r\n  const userId = req.user?.id;\r\n\r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // First verify the team exists and user is a member\r\n    const teamMember = await db.teamMember.findFirst({\r\n      where: {\r\n        userId,\r\n        teamId,\r\n      },\r\n      include: {\r\n        team: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            project: {\r\n              select: {\r\n                id: true,\r\n                name: true,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!teamMember) {\r\n      res.status(403).json({\r\n        message: \"You are not a member of this team or team does not exist\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Get all documents for this specific team\r\n    const documents = await db.document.findMany({\r\n      where: {\r\n        teamId: teamId,\r\n      },\r\n      include: {\r\n        owner: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n          },\r\n        },\r\n      },\r\n      orderBy: { updatedAt: \"desc\" },\r\n    });\r\n\r\n    res.status(200).json({\r\n      documents,\r\n      team: teamMember.team,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error fetching documents by team:\", error);\r\n    res.status(500).json({ message: \"Server error\" });\r\n    return;\r\n  }\r\n};\r\n\r\n// GET /projects/:projectId/documents - Get all documents for all teams in a project\r\nexport const getDocumentsByProject: RequestHandler = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { projectId } = req.params;\r\n  const userId = req.user?.id;\r\n\r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Get the project and its associated teams\r\n    const project = await db.project.findUnique({\r\n      where: { id: projectId },\r\n      include: {\r\n        teams: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!project) {\r\n      res.status(404).json({ message: \"Project not found\" });\r\n      return;\r\n    }\r\n\r\n    // Extract all team IDs related to the project\r\n    const projectTeamIds = project.teams.map((team) => team.id);\r\n\r\n    // Check if the user is a member of any of the project's teams\r\n    const isMember = await db.teamMember.findFirst({\r\n      where: {\r\n        userId,\r\n        teamId: {\r\n          in: projectTeamIds,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!isMember) {\r\n      res.status(403).json({ message: \"Unauthorized\" });\r\n      return;\r\n    }\r\n\r\n    // Get all documents from all teams in this project\r\n    const documents = await db.document.findMany({\r\n      where: {\r\n        teamId: {\r\n          in: projectTeamIds,\r\n        },\r\n      },\r\n      include: {\r\n        owner: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n          },\r\n        },\r\n        team: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n      orderBy: { updatedAt: \"desc\" },\r\n    });\r\n\r\n    res.status(200).json({\r\n      documents,\r\n      project: {\r\n        id: project.id,\r\n        name: project.name,\r\n        teams: project.teams,\r\n      },\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    res.status(500).json({ message: \"Server error\" });\r\n    return;\r\n  }\r\n};\r\n\r\n// PATCH /documents/:id - Update document content\r\nexport const SaveDocument: RequestHandler = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { id } = req.params;\r\n  const { content } = req.body;\r\n  const userId = req.user?.id;\r\n\r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const document = await db.document.findUnique({\r\n      where: { id },\r\n      include: {\r\n        team: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!document) {\r\n      res.status(404).json({ message: \"Document not found\" });\r\n      return;\r\n    }\r\n\r\n    // Check if the user is a member of the team that owns this document\r\n    const isMember = await db.teamMember.findFirst({\r\n      where: {\r\n        userId,\r\n        teamId: document.teamId,\r\n      },\r\n    });\r\n\r\n    if (!isMember) {\r\n      res.status(403).json({ message: \"Unauthorized\" });\r\n      return;\r\n    }\r\n\r\n    const updatedDocument = await db.document.update({\r\n      where: { id },\r\n      data: { content },\r\n      include: {\r\n        owner: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n          },\r\n        },\r\n        team: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n    console.log(\"Saved Document Now at\", Date.now());\r\n    res.status(200).json({\r\n      message: \"Document updated successfully\",\r\n      document: updatedDocument,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error updating document:\", error);\r\n    res.status(500).json({ message: \"Server error\" });\r\n    return;\r\n  }\r\n};\r\n\r\n// DELETE /documents/:id - Delete a document\r\nexport const deleteDocument: RequestHandler = async (req, res) => {\r\n  const { id } = req.params;\r\n  const userId = req.user?.id;\r\n\r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const document = await db.document.findUnique({\r\n      where: { id },\r\n      include: {\r\n        team: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!document) {\r\n      res.status(404).json({ message: \"Document not found\" });\r\n      return;\r\n    }\r\n\r\n    // Check if the user is a member of the team that owns this document\r\n    const isMember = await db.teamMember.findFirst({\r\n      where: {\r\n        userId,\r\n        teamId: document.teamId,\r\n      },\r\n    });\r\n\r\n    if (!isMember) {\r\n      res.status(403).json({ message: \"Unauthorized\" });\r\n      return;\r\n    }\r\n\r\n    // Optional: Only allow document owner or team admin to delete\r\n    // const teamMember = await db.teamMember.findFirst({\r\n    //   where: {\r\n    //     userId,\r\n    //     teamId: document.teamId,\r\n    //   },\r\n    // });\r\n\r\n    // if (document.ownerId !== userId && teamMember?.role !== \"ADMIN\") {\r\n    //   res.status(403).json({\r\n    //     message: \"Only document owner or team admin can delete this document\"\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    await db.document.delete({\r\n      where: { id },\r\n    });\r\n\r\n    res.status(200).json({ message: \"Document deleted successfully\" });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error deleting document:\", error);\r\n    res.status(500).json({ message: \"Server error\" });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getUserDocuments = async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?.id;\r\n    if (!userId) {\r\n      res.status(401).json({ message: \"Unauthorized\" });\r\n      return;\r\n    }\r\n\r\n    const documents = await db.document.findMany({\r\n      where: {\r\n        team: {\r\n          members: {\r\n            some: {\r\n              userId: userId,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      select: {\r\n        id: true,\r\n        title: true,\r\n        content: true,\r\n        updatedAt: true,\r\n        createdAt: true,\r\n        team: {\r\n          select: {\r\n            name: true,\r\n            id: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    const formattedDocuments = documents.map((d) => ({\r\n      id: d.id,\r\n      title: d.title,\r\n      teamId: d.team.id,\r\n      content: d.content,\r\n      teamName: d.team.name,\r\n      updatedAt: d.updatedAt,\r\n      createdAt: d.createdAt,\r\n    }));\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      documents: formattedDocuments,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error fetching user documents:\", error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: \"Internal server error\",\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]}