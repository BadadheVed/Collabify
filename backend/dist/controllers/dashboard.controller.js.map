{"version":3,"file":"dashboard.controller.js","names":["_db","require","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","getTileData","exports","_ref","_callee","req","res","_req$user","userId","userData","totalTeamMembers","totalTeamDocuments","_t","_context","user","id","status","json","message","db","findUnique","where","select","name","email","_count","ProjectMember","teams","documents","teamId","team","members","reduce","acc","tm","projects","teamMembers","console","error","_x","_x2","getMyTeams","_ref2","_callee2","_req$user2","formatted","_t2","_context2","findMany","some","include","map","_currentUser$role","currentUser","find","teamName","currentUserRole","role","member","success","_x3","_x4","getUserTeamsSummary","_ref3","_callee3","_req$user3","result","_t3","_context3","membersCount","_x5","_x6"],"sources":["../../src/controllers/dashboard.controller.ts"],"sourcesContent":["import { db } from \"@/DB_Client/db\";\r\nimport { Request, Response, RequestHandler } from \"express\";\r\nimport redisClient from \"@/redis/client\";\r\nexport const getTileData = async (req: Request, res: Response) => {\r\n  const userId = req.user?.id;\r\n  \r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const userData = await db.user.findUnique({\r\n      where: { id: userId },\r\n      select: {\r\n        name: true,\r\n        email: true,\r\n        _count: {\r\n          select: {\r\n            ProjectMember: true,\r\n            teams: true,\r\n            documents: true,\r\n          },\r\n        },\r\n        teams: {\r\n          select: {\r\n            teamId: true,\r\n            team: {\r\n              select: {\r\n                _count: {\r\n                  select: { members: true, documents: true },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!userData) {\r\n      res.status(404).json({ message: \"User not found\" });\r\n      return;\r\n    }\r\n\r\n    // Flatten the counts\r\n    const totalTeamMembers = userData.teams.reduce(\r\n      (acc, tm) => acc + tm.team._count.members,\r\n      0\r\n    );\r\n\r\n    const totalTeamDocuments = userData.teams.reduce(\r\n      (acc, tm) => acc + tm.team._count.documents,\r\n      0\r\n    );\r\n\r\n    res.status(200).json({\r\n      name: userData.name,\r\n      email: userData.email,\r\n      projects: userData._count.ProjectMember,\r\n      teams: userData._count.teams,\r\n      teamMembers: totalTeamMembers,\r\n      documents: totalTeamDocuments,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"getTileData error:\", error);\r\n    res.status(500).json({ message: \"Internal Server Error\" });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getMyTeams = async (req: Request, res: Response) => {\r\n  const userId = req.user?.id;\r\n\r\n  if (!userId) {\r\n    res.status(401).json({ message: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const teams = await db.team.findMany({\r\n      where: {\r\n        members: {\r\n          some: { userId },\r\n        },\r\n      },\r\n      include: {\r\n        members: {\r\n          include: {\r\n            user: {\r\n              select: {\r\n                name: true,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    const formatted = teams.map((team) => {\r\n      const currentUser = team.members.find((m) => m.userId === userId);\r\n\r\n      return {\r\n        teamId: team.id,\r\n        teamName: team.name,\r\n        currentUserRole: currentUser?.role ?? \"MEMBER\", // default fallback\r\n        members: team.members.map((member) => ({\r\n          name: member.user.name,\r\n          role: member.role,\r\n        })),\r\n      };\r\n    });\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      teams: formatted,\r\n    });\r\n    return;\r\n  } catch (err) {\r\n    console.error(\"Error fetching teams:\", err);\r\n    return res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nexport const getUserTeamsSummary = async (req: Request, res: Response) => {\r\n  const userId = req.user?.id;\r\n  if (!userId) return res.status(401).json({ message: \"Unauthorized\" });\r\n\r\n  try {\r\n    const teams = await db.team.findMany({\r\n      where: {\r\n        members: {\r\n          some: { userId },\r\n        },\r\n      },\r\n      include: {\r\n        members: {\r\n          select: { id: true }, // just for counting\r\n        },\r\n      },\r\n    });\r\n\r\n    const result = teams.map((team) => ({\r\n      id: team.id,\r\n      name: team.name,\r\n      membersCount: team.members.length,\r\n    }));\r\n\r\n    res.status(200).json({ success: true, teams: result });\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]}