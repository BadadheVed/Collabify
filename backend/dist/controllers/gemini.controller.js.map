{"version":3,"file":"gemini.controller.js","names":["_groq","require","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","GROQ_API","process","env","GroqResponse","exports","_ref","_callee","req","res","_req$body","message","context","prompt","response","_t","_context","status","json","success","body","error","documentContent","concat","askGroq","console","_x","_x2"],"sources":["../../src/controllers/gemini.controller.ts"],"sourcesContent":["import { askGroq } from \"@/services/groq.service\";\r\nimport { Request, Response } from \"express\";\r\n\r\nconst GROQ_API = process.env.GROQ_API;\r\n\r\nexport const GroqResponse = async (req: Request, res: Response) => {\r\n  if (!GROQ_API) {\r\n    res.status(404).json({\r\n      success: false,\r\n      message: \"Groq API Key Not Found\",\r\n    });\r\n    return;\r\n  }\r\n\r\n  const { message, context } = req.body;\r\n\r\n  if (!message || typeof message !== \"string\") {\r\n    res.status(400).json({ error: \"Message must be a string.\" });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Enhanced prompt with document collaboration capabilities\r\n    let prompt = message;\r\n\r\n    if (context?.documentContent) {\r\n      prompt = `You are an AI assistant specialized in document collaboration and productivity. You can help with:\r\n- Summarizing documents (brief, detailed, or executive summaries)\r\n- Extracting key points and main ideas\r\n- Answering questions about document content\r\n- Improving text quality and clarity\r\n- Creating outlines and structure\r\n- Grammar and style suggestions\r\n- Writing assistance and enhancement\r\n\r\nDocument Context: \"${context.documentContent}\"\r\n\r\nUser's Request: ${message}\r\n\r\nPlease provide a helpful, accurate, and contextual response. If the user asks for a summary, provide it in a clear format. If they ask for improvements, be specific and actionable. If they have questions, answer based on the document content.`;\r\n    } else {\r\n      // For general questions without document context\r\n      prompt = `You are an AI assistant specialized in document collaboration and productivity. \r\n\r\nUser's Request: ${message}\r\n\r\nPlease provide a helpful and accurate response. You can assist with writing, editing, summarizing, outlining, and general document-related tasks.`;\r\n    }\r\n\r\n    const response = await askGroq(prompt);\r\n    res.status(200).json({ response });\r\n  } catch (error) {\r\n    console.error(\"Groq API error:\", error);\r\n    res.status(500).json({\r\n      error: \"Failed to get response from Groq\",\r\n      response: \"Sorry, I encountered an error. Please try again.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]}