{"version":3,"file":"roles.js","names":["_express","require","_jsonwebtoken","_interopRequireDefault","_db","e","__esModule","_regenerator","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","checkTeamMember","exports","roles","_ref","_callee","req","res","next","_req$user","userId","teamId","member","_t","_context","user","id","params","status","json","message","db","teamMember","findFirst","where","role","_x","_x2","_x3","CheckProjectRoles","_ref2","_callee2","_req$user2","projectId","_t2","_context2","projectMember","_x4","_x5","_x6","checkAuth","console","log","cookies","headers","cookie","token","success","substring","decoded","jwt","verify","process","env","JWT_SECRET","email","error"],"sources":["../../src/middlewares/roles.ts"],"sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport jwt, { decode } from \"jsonwebtoken\";\r\nimport { TokenPayload } from \"@/types/Tokens\";\r\nimport { db } from \"@/DB_Client/db\";\r\nimport { Role } from \"@prisma/client\";\r\ndeclare global {\r\n  namespace Express {\r\n    interface Request {\r\n      user?: TokenPayload;\r\n    }\r\n  }\r\n}\r\n\r\nexport const checkTeamMember = (roles: Role[]) => {\r\n  return async (req: Request, res: Response, next: NextFunction) => {\r\n    const userId = req.user?.id; // ‚úÖ already set by checkAuth\r\n    const { teamId } = req.params;\r\n\r\n    if (!userId || !teamId) {\r\n      res.status(400).json({ message: \"Missing user ID or project ID\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const member = await db.teamMember.findFirst({\r\n        where: {\r\n          userId,\r\n          teamId,\r\n          role: { in: roles },\r\n        },\r\n      });\r\n\r\n      if (!member) {\r\n        res.status(403).json({ message: \"Unauthorized Access\" });\r\n        return;\r\n      }\r\n\r\n      next();\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Internal Server Error\" });\r\n      return;\r\n    }\r\n  };\r\n};\r\nexport const CheckProjectRoles = (roles: Role[]) => {\r\n  return async (req: Request, res: Response, next: NextFunction) => {\r\n    const userId = req.user?.id; // ‚úÖ already set by checkAuth\r\n    const { projectId } = req.params;\r\n\r\n    if (!userId || !projectId) {\r\n      res.status(400).json({ message: \"Missing user ID or project ID\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const member = await db.projectMember.findFirst({\r\n        where: {\r\n          userId,\r\n          projectId,\r\n          role: { in: roles },\r\n        },\r\n      });\r\n\r\n      if (!member) {\r\n        res.status(403).json({ message: \"Unauthorized Access\" });\r\n        return;\r\n      }\r\n\r\n      next();\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Internal Server Error\" });\r\n      return;\r\n    }\r\n  };\r\n};\r\n\r\nexport const checkAuth = (req: Request, res: Response, next: NextFunction) => {\r\n  console.log(\"üîç Auth middleware called\");\r\n  console.log(\"üç™ All cookies:\", req.cookies);\r\n  console.log(\"üìã Headers:\", req.headers.cookie);\r\n\r\n  const token = req.cookies.token;\r\n\r\n  if (!token) {\r\n    console.log(\"‚ùå No token found in cookies\");\r\n    res.status(401).json({\r\n      message: \"No Token Found, Please Login again to Continue\",\r\n      success: false,\r\n    });\r\n    return;\r\n  }\r\n\r\n  console.log(\"‚úÖ Token found:\", token.substring(0, 20) + \"...\");\r\n\r\n  try {\r\n    const decoded = jwt.verify(\r\n      token,\r\n      process.env.JWT_SECRET as string\r\n    ) as TokenPayload;\r\n\r\n    console.log(\"‚úÖ Token decoded successfully:\", {\r\n      id: decoded.id,\r\n      email: decoded.email,\r\n    });\r\n\r\n    req.user = decoded;\r\n    next();\r\n  } catch (error) {\r\n    console.log(\"‚ùå Token verification failed:\", error);\r\n    res.status(403).json({\r\n      message: \"Invalid Token\",\r\n      success: false,\r\n    });\r\n    return;\r\n  }\r\n};\r\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,GAAA,GAAAH,OAAA;AAAoC,SAAAE,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAAA,SAAAE,aAAA,IAFpC,uKAAAF,CAAA,EAAAG,CAAA,EAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,WAAA,8BAAAC,EAAAN,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAL,CAAA,IAAAA,CAAA,CAAAM,SAAA,YAAAC,SAAA,GAAAP,CAAA,GAAAO,SAAA,EAAAC,CAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAL,CAAA,CAAAC,SAAA,UAAAK,mBAAA,CAAAH,CAAA,uBAAAV,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAI,CAAA,MAAAC,CAAA,GAAAX,CAAA,QAAAY,CAAA,OAAAC,CAAA,KAAAF,CAAA,KAAAb,CAAA,KAAAgB,CAAA,EAAAtB,CAAA,EAAAuB,CAAA,EAAAC,CAAA,EAAAN,CAAA,EAAAM,CAAA,CAAAC,IAAA,CAAAzB,CAAA,MAAAwB,CAAA,WAAAA,EAAArB,CAAA,EAAAC,CAAA,WAAAM,CAAA,GAAAP,CAAA,EAAAQ,CAAA,MAAAG,CAAA,GAAAd,CAAA,EAAAqB,CAAA,CAAAf,CAAA,GAAAF,CAAA,EAAAmB,CAAA,gBAAAC,EAAApB,CAAA,EAAAE,CAAA,SAAAK,CAAA,GAAAP,CAAA,EAAAU,CAAA,GAAAR,CAAA,EAAAH,CAAA,OAAAiB,CAAA,IAAAF,CAAA,KAAAV,CAAA,IAAAL,CAAA,GAAAgB,CAAA,CAAAO,MAAA,EAAAvB,CAAA,UAAAK,CAAA,EAAAE,CAAA,GAAAS,CAAA,CAAAhB,CAAA,GAAAqB,CAAA,GAAAH,CAAA,CAAAF,CAAA,EAAAQ,CAAA,GAAAjB,CAAA,KAAAN,CAAA,QAAAI,CAAA,GAAAmB,CAAA,KAAArB,CAAA,MAAAQ,CAAA,GAAAJ,CAAA,EAAAC,CAAA,GAAAD,CAAA,YAAAC,CAAA,WAAAD,CAAA,MAAAA,CAAA,MAAAV,CAAA,IAAAU,CAAA,OAAAc,CAAA,MAAAhB,CAAA,GAAAJ,CAAA,QAAAoB,CAAA,GAAAd,CAAA,QAAAC,CAAA,MAAAU,CAAA,CAAAC,CAAA,GAAAhB,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAI,CAAA,OAAAc,CAAA,GAAAG,CAAA,KAAAnB,CAAA,GAAAJ,CAAA,QAAAM,CAAA,MAAAJ,CAAA,IAAAA,CAAA,GAAAqB,CAAA,MAAAjB,CAAA,MAAAN,CAAA,EAAAM,CAAA,MAAAJ,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAqB,CAAA,EAAAhB,CAAA,cAAAH,CAAA,IAAAJ,CAAA,aAAAmB,CAAA,QAAAH,CAAA,OAAAd,CAAA,qBAAAE,CAAA,EAAAW,CAAA,EAAAQ,CAAA,QAAAT,CAAA,YAAAU,SAAA,uCAAAR,CAAA,UAAAD,CAAA,IAAAK,CAAA,CAAAL,CAAA,EAAAQ,CAAA,GAAAhB,CAAA,GAAAQ,CAAA,EAAAL,CAAA,GAAAa,CAAA,GAAAxB,CAAA,GAAAQ,CAAA,OAAAX,CAAA,GAAAc,CAAA,MAAAM,CAAA,KAAAV,CAAA,KAAAC,CAAA,GAAAA,CAAA,QAAAA,CAAA,SAAAU,CAAA,CAAAf,CAAA,QAAAkB,CAAA,CAAAb,CAAA,EAAAG,CAAA,KAAAO,CAAA,CAAAf,CAAA,GAAAQ,CAAA,GAAAO,CAAA,CAAAC,CAAA,GAAAR,CAAA,aAAAI,CAAA,MAAAR,CAAA,QAAAC,CAAA,KAAAH,CAAA,YAAAL,CAAA,GAAAO,CAAA,CAAAF,CAAA,WAAAL,CAAA,GAAAA,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,EAAAI,CAAA,UAAAc,SAAA,2CAAAzB,CAAA,CAAA2B,IAAA,SAAA3B,CAAA,EAAAW,CAAA,GAAAX,CAAA,CAAA4B,KAAA,EAAApB,CAAA,SAAAA,CAAA,oBAAAA,CAAA,KAAAR,CAAA,GAAAO,CAAA,eAAAP,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,GAAAC,CAAA,SAAAG,CAAA,GAAAc,SAAA,uCAAApB,CAAA,gBAAAG,CAAA,OAAAD,CAAA,GAAAV,CAAA,cAAAG,CAAA,IAAAiB,CAAA,GAAAC,CAAA,CAAAf,CAAA,QAAAQ,CAAA,GAAAV,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,EAAAe,CAAA,OAAAE,CAAA,kBAAApB,CAAA,IAAAO,CAAA,GAAAV,CAAA,EAAAW,CAAA,MAAAG,CAAA,GAAAX,CAAA,cAAAe,CAAA,mBAAAa,KAAA,EAAA5B,CAAA,EAAA2B,IAAA,EAAAV,CAAA,SAAAhB,CAAA,EAAAI,CAAA,EAAAE,CAAA,QAAAI,CAAA,QAAAS,CAAA,gBAAAV,UAAA,cAAAmB,kBAAA,cAAAC,2BAAA,KAAA9B,CAAA,GAAAY,MAAA,CAAAmB,cAAA,MAAAvB,CAAA,MAAAL,CAAA,IAAAH,CAAA,CAAAA,CAAA,IAAAG,CAAA,SAAAW,mBAAA,CAAAd,CAAA,OAAAG,CAAA,iCAAAH,CAAA,GAAAW,CAAA,GAAAmB,0BAAA,CAAArB,SAAA,GAAAC,SAAA,CAAAD,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAL,CAAA,YAAAO,EAAAlB,CAAA,WAAAe,MAAA,CAAAoB,cAAA,GAAApB,MAAA,CAAAoB,cAAA,CAAAnC,CAAA,EAAAiC,0BAAA,KAAAjC,CAAA,CAAAoC,SAAA,GAAAH,0BAAA,EAAAhB,mBAAA,CAAAjB,CAAA,EAAAQ,CAAA,yBAAAR,CAAA,CAAAY,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAF,CAAA,GAAAd,CAAA,WAAAgC,iBAAA,CAAApB,SAAA,GAAAqB,0BAAA,EAAAhB,mBAAA,CAAAH,CAAA,iBAAAmB,0BAAA,GAAAhB,mBAAA,CAAAgB,0BAAA,iBAAAD,iBAAA,GAAAA,iBAAA,CAAAK,WAAA,wBAAApB,mBAAA,CAAAgB,0BAAA,EAAAzB,CAAA,wBAAAS,mBAAA,CAAAH,CAAA,GAAAG,mBAAA,CAAAH,CAAA,EAAAN,CAAA,gBAAAS,mBAAA,CAAAH,CAAA,EAAAR,CAAA,iCAAAW,mBAAA,CAAAH,CAAA,8DAAAZ,YAAA,YAAAA,aAAA,aAAAoC,CAAA,EAAA5B,CAAA,EAAA6B,CAAA,EAAArB,CAAA;AAAA,SAAAD,oBAAAjB,CAAA,EAAAI,CAAA,EAAAE,CAAA,EAAAH,CAAA,QAAAO,CAAA,GAAAK,MAAA,CAAAyB,cAAA,QAAA9B,CAAA,uBAAAV,CAAA,IAAAU,CAAA,QAAAO,mBAAA,YAAAwB,mBAAAzC,CAAA,EAAAI,CAAA,EAAAE,CAAA,EAAAH,CAAA,QAAAC,CAAA,EAAAM,CAAA,GAAAA,CAAA,CAAAV,CAAA,EAAAI,CAAA,IAAA2B,KAAA,EAAAzB,CAAA,EAAAoC,UAAA,GAAAvC,CAAA,EAAAwC,YAAA,GAAAxC,CAAA,EAAAyC,QAAA,GAAAzC,CAAA,MAAAH,CAAA,CAAAI,CAAA,IAAAE,CAAA,YAAAE,CAAA,YAAAA,EAAAJ,CAAA,EAAAE,CAAA,IAAAW,mBAAA,CAAAjB,CAAA,EAAAI,CAAA,YAAAJ,CAAA,gBAAA6C,OAAA,CAAAzC,CAAA,EAAAE,CAAA,EAAAN,CAAA,UAAAQ,CAAA,aAAAA,CAAA,cAAAA,CAAA,oBAAAS,mBAAA,CAAAjB,CAAA,EAAAI,CAAA,EAAAE,CAAA,EAAAH,CAAA;AAAA,SAAA2C,mBAAAxC,CAAA,EAAAH,CAAA,EAAAH,CAAA,EAAAI,CAAA,EAAAI,CAAA,EAAAe,CAAA,EAAAZ,CAAA,cAAAD,CAAA,GAAAJ,CAAA,CAAAiB,CAAA,EAAAZ,CAAA,GAAAG,CAAA,GAAAJ,CAAA,CAAAqB,KAAA,WAAAzB,CAAA,gBAAAN,CAAA,CAAAM,CAAA,KAAAI,CAAA,CAAAoB,IAAA,GAAA3B,CAAA,CAAAW,CAAA,IAAAiC,OAAA,CAAAC,OAAA,CAAAlC,CAAA,EAAAmC,IAAA,CAAA7C,CAAA,EAAAI,CAAA;AAAA,SAAA0C,kBAAA5C,CAAA,6BAAAH,CAAA,SAAAH,CAAA,GAAAmD,SAAA,aAAAJ,OAAA,WAAA3C,CAAA,EAAAI,CAAA,QAAAe,CAAA,GAAAjB,CAAA,CAAA8C,KAAA,CAAAjD,CAAA,EAAAH,CAAA,YAAAqD,MAAA/C,CAAA,IAAAwC,kBAAA,CAAAvB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA6C,KAAA,EAAAC,MAAA,UAAAhD,CAAA,cAAAgD,OAAAhD,CAAA,IAAAwC,kBAAA,CAAAvB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA6C,KAAA,EAAAC,MAAA,WAAAhD,CAAA,KAAA+C,KAAA;AAYO,IAAME,eAAe,GAAAC,OAAA,CAAAD,eAAA,GAAG,SAAlBA,eAAeA,CAAIE,KAAa,EAAK;EAChD;IAAA,IAAAC,IAAA,GAAAR,iBAAA,cAAAhD,YAAA,GAAAqC,CAAA,CAAO,SAAAoB,QAAOC,GAAY,EAAEC,GAAa,EAAEC,IAAkB;MAAA,IAAAC,SAAA;MAAA,IAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,EAAA;MAAA,OAAAjE,YAAA,GAAAoC,CAAA,WAAA8B,QAAA;QAAA,kBAAAA,QAAA,CAAAjD,CAAA,GAAAiD,QAAA,CAAA9D,CAAA;UAAA;YACrD0D,MAAM,IAAAD,SAAA,GAAGH,GAAG,CAACS,IAAI,cAAAN,SAAA,uBAARA,SAAA,CAAUO,EAAE,EAAE;YACrBL,MAAM,GAAKL,GAAG,CAACW,MAAM,CAArBN,MAAM;YAAA,MAEV,CAACD,MAAM,IAAI,CAACC,MAAM;cAAAG,QAAA,CAAA9D,CAAA;cAAA;YAAA;YACpBuD,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEC,OAAO,EAAE;YAAgC,CAAC,CAAC;YAAC,OAAAN,QAAA,CAAA7C,CAAA;UAAA;YAAA6C,QAAA,CAAAjD,CAAA;YAAAiD,QAAA,CAAA9D,CAAA;YAAA,OAK9CqE,MAAE,CAACC,UAAU,CAACC,SAAS,CAAC;cAC3CC,KAAK,EAAE;gBACLd,MAAM,EAANA,MAAM;gBACNC,MAAM,EAANA,MAAM;gBACNc,IAAI,EAAE;kBAAE,MAAItB;gBAAM;cACpB;YACF,CAAC,CAAC;UAAA;YANIS,MAAM,GAAAE,QAAA,CAAA9C,CAAA;YAAA,IAQP4C,MAAM;cAAAE,QAAA,CAAA9D,CAAA;cAAA;YAAA;YACTuD,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEC,OAAO,EAAE;YAAsB,CAAC,CAAC;YAAC,OAAAN,QAAA,CAAA7C,CAAA;UAAA;YAI3DuC,IAAI,CAAC,CAAC;YAACM,QAAA,CAAA9D,CAAA;YAAA;UAAA;YAAA8D,QAAA,CAAAjD,CAAA;YAAAgD,EAAA,GAAAC,QAAA,CAAA9C,CAAA;YAEPuC,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEC,OAAO,EAAE;YAAwB,CAAC,CAAC;YAAC,OAAAN,QAAA,CAAA7C,CAAA;UAAA;YAAA,OAAA6C,QAAA,CAAA7C,CAAA;QAAA;MAAA,GAAAoC,OAAA;IAAA,CAG9D;IAAA,iBAAAqB,EAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAxB,IAAA,CAAAN,KAAA,OAAAD,SAAA;IAAA;EAAA;AACH,CAAC;AACM,IAAMgC,iBAAiB,GAAA3B,OAAA,CAAA2B,iBAAA,GAAG,SAApBA,iBAAiBA,CAAI1B,KAAa,EAAK;EAClD;IAAA,IAAA2B,KAAA,GAAAlC,iBAAA,cAAAhD,YAAA,GAAAqC,CAAA,CAAO,SAAA8C,SAAOzB,GAAY,EAAEC,GAAa,EAAEC,IAAkB;MAAA,IAAAwB,UAAA;MAAA,IAAAtB,MAAA,EAAAuB,SAAA,EAAArB,MAAA,EAAAsB,GAAA;MAAA,OAAAtF,YAAA,GAAAoC,CAAA,WAAAmD,SAAA;QAAA,kBAAAA,SAAA,CAAAtE,CAAA,GAAAsE,SAAA,CAAAnF,CAAA;UAAA;YACrD0D,MAAM,IAAAsB,UAAA,GAAG1B,GAAG,CAACS,IAAI,cAAAiB,UAAA,uBAARA,UAAA,CAAUhB,EAAE,EAAE;YACrBiB,SAAS,GAAK3B,GAAG,CAACW,MAAM,CAAxBgB,SAAS;YAAA,MAEb,CAACvB,MAAM,IAAI,CAACuB,SAAS;cAAAE,SAAA,CAAAnF,CAAA;cAAA;YAAA;YACvBuD,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEC,OAAO,EAAE;YAAgC,CAAC,CAAC;YAAC,OAAAe,SAAA,CAAAlE,CAAA;UAAA;YAAAkE,SAAA,CAAAtE,CAAA;YAAAsE,SAAA,CAAAnF,CAAA;YAAA,OAK9CqE,MAAE,CAACe,aAAa,CAACb,SAAS,CAAC;cAC9CC,KAAK,EAAE;gBACLd,MAAM,EAANA,MAAM;gBACNuB,SAAS,EAATA,SAAS;gBACTR,IAAI,EAAE;kBAAE,MAAItB;gBAAM;cACpB;YACF,CAAC,CAAC;UAAA;YANIS,MAAM,GAAAuB,SAAA,CAAAnE,CAAA;YAAA,IAQP4C,MAAM;cAAAuB,SAAA,CAAAnF,CAAA;cAAA;YAAA;YACTuD,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEC,OAAO,EAAE;YAAsB,CAAC,CAAC;YAAC,OAAAe,SAAA,CAAAlE,CAAA;UAAA;YAI3DuC,IAAI,CAAC,CAAC;YAAC2B,SAAA,CAAAnF,CAAA;YAAA;UAAA;YAAAmF,SAAA,CAAAtE,CAAA;YAAAqE,GAAA,GAAAC,SAAA,CAAAnE,CAAA;YAEPuC,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEC,OAAO,EAAE;YAAwB,CAAC,CAAC;YAAC,OAAAe,SAAA,CAAAlE,CAAA;UAAA;YAAA,OAAAkE,SAAA,CAAAlE,CAAA;QAAA;MAAA,GAAA8D,QAAA;IAAA,CAG9D;IAAA,iBAAAM,GAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAT,KAAA,CAAAhC,KAAA,OAAAD,SAAA;IAAA;EAAA;AACH,CAAC;AAEM,IAAM2C,SAAS,GAAAtC,OAAA,CAAAsC,SAAA,GAAG,SAAZA,SAASA,CAAIlC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAK;EAC5EiC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxCD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEpC,GAAG,CAACqC,OAAO,CAAC;EAC3CF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEpC,GAAG,CAACsC,OAAO,CAACC,MAAM,CAAC;EAE9C,IAAMC,KAAK,GAAGxC,GAAG,CAACqC,OAAO,CAACG,KAAK;EAE/B,IAAI,CAACA,KAAK,EAAE;IACVL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CnC,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,gDAAgD;MACzD2B,OAAO,EAAE;IACX,CAAC,CAAC;IACF;EACF;EAEAN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEI,KAAK,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;EAE7D,IAAI;IACF,IAAMC,OAAO,GAAGC,wBAAG,CAACC,MAAM,CACxBL,KAAK,EACLM,OAAO,CAACC,GAAG,CAACC,UACd,CAAiB;IAEjBb,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;MAC3C1B,EAAE,EAAEiC,OAAO,CAACjC,EAAE;MACduC,KAAK,EAAEN,OAAO,CAACM;IACjB,CAAC,CAAC;IAEFjD,GAAG,CAACS,IAAI,GAAGkC,OAAO;IAClBzC,IAAI,CAAC,CAAC;EACR,CAAC,CAAC,OAAOgD,KAAK,EAAE;IACdf,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEc,KAAK,CAAC;IAClDjD,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,eAAe;MACxB2B,OAAO,EAAE;IACX,CAAC,CAAC;IACF;EACF;AACF,CAAC","ignoreList":[]}