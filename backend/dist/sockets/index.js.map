{"version":3,"file":"index.js","names":["_socket","require","io","initSocketServer","exports","server","Server","cors","origin","process","env","FRONTEND_URL","credentials","on","socket","console","log","concat","id","userId","join","getIO","Error"],"sources":["../../src/sockets/index.ts"],"sourcesContent":["import { Server, Socket } from \"socket.io\";\r\nlet io: Server;\r\nexport const initSocketServer = (server: any) => {\r\n  io = new Server(server, {\r\n    cors: {\r\n      origin: process.env.FRONTEND_URL, // Replace with your frontend URL\r\n      credentials: true,\r\n    },\r\n  });\r\n\r\n  io.on(\"connection\", (socket: Socket) => {\r\n    console.log(`Socket ${socket.id} connected`);\r\n    socket.on(\"join-room\", (userId) => {\r\n      socket.join(userId);\r\n      console.log(`User ${userId} joined their private room`);\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(\"Socket disconnected:\", socket.id);\r\n    });\r\n  });\r\n};\r\n\r\nexport const getIO = () => {\r\n  if (!io) throw new Error(\"Socket.io not initialized\");\r\n  return io;\r\n};\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAIC,EAAU;AACP,IAAMC,gBAAgB,GAAAC,OAAA,CAAAD,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAIE,MAAW,EAAK;EAC/CH,EAAE,GAAG,IAAII,cAAM,CAACD,MAAM,EAAE;IACtBE,IAAI,EAAE;MACJC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,YAAY;MAAE;MAClCC,WAAW,EAAE;IACf;EACF,CAAC,CAAC;EAEFV,EAAE,CAACW,EAAE,CAAC,YAAY,EAAE,UAACC,MAAc,EAAK;IACtCC,OAAO,CAACC,GAAG,WAAAC,MAAA,CAAWH,MAAM,CAACI,EAAE,eAAY,CAAC;IAC5CJ,MAAM,CAACD,EAAE,CAAC,WAAW,EAAE,UAACM,MAAM,EAAK;MACjCL,MAAM,CAACM,IAAI,CAACD,MAAM,CAAC;MACnBJ,OAAO,CAACC,GAAG,SAAAC,MAAA,CAASE,MAAM,+BAA4B,CAAC;IACzD,CAAC,CAAC;IAEFL,MAAM,CAACD,EAAE,CAAC,YAAY,EAAE,YAAM;MAC5BE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAACI,EAAE,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAEM,IAAMG,KAAK,GAAAjB,OAAA,CAAAiB,KAAA,GAAG,SAARA,KAAKA,CAAA,EAAS;EACzB,IAAI,CAACnB,EAAE,EAAE,MAAM,IAAIoB,KAAK,CAAC,2BAA2B,CAAC;EACrD,OAAOpB,EAAE;AACX,CAAC","ignoreList":[]}